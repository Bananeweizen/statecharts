h1(#Test1). Yakindu SCT Testcase 01 - Installation


|_. Nr |_. Testname |_. Test Instructions |_. Postconditions |_. Status|
| 1.1 | Add Yakindu plugins | Click on *Help->Install* new Software....<p> Select *Add...* in the „Install“ window.</p> Enter the update URL "http://updates.yakindu.org/sct/luna/milestones/":http://updates.yakindu.org/sct/luna/milestones/  as Location.<p>Click on orgblunan</p> | The content of the Yakindu update site should be displayed with two entries:<p>- Xtext Integration Utilities</p><p>- Yakindu SCT 2 </p>| |
| 1.2 | Install Yakindu | Select Xtext Integration Utilities and Yakindu SCT 2 from the tree Click on *Next* button *twice*<p>Accept the License Agreement</p><p>Select *Finish* Button to start installation</p><p>*If a security warning pops up continue with the installation*</p> | An information box asking you to restart | |
| 1.3 | Complete the installation | Accept to restart Eclipse<p>Select *Help->About Eclipse*</p><p>Click on *Installation Details button*</p><p>Select *the Plug-ins* tab</p> | Eclipse restarted and following Yakindu Plug-ins<p>Installed:</p><p></p><p>- Yakindu SCT C Generator</p><p>- Yakindu SCT C++ Generator</p><p>- Yakindu SCT Editor</p><p>- Yakindu SCT Help</p><p>- Yakindu SCT SExec Edit Support</p><p>- Yakindu SCT SExec Model</p><p>- Yakindu SCT SGraph Edit Support</p><p>- Yakindu SCT SGraph Model</p><p>- Yakindu SCT SGraph Model UI</p><p>- Yakindu SCT Simulation Core</p><p>- Yakindu SCT Simulation UI</p><p>- Yakindu SCT SText </p><p>- Yakindu SCT SText Integration</p><p>- Yakindu SCT SText Resource</p><p>- Yakindu SCT SText UI</p><p>- Yakindu SCT UI</p> | |


h1(#Test2). Yakindu SCT Testcase 02 - Editor


|_. Nr |_. Testname |_. Test Instructions |_. Postconditions |_. Status|
| 2.1 | Create a Java project | Click on *File->New->Java Project*<p>Enter *TestProject* as new project name</p><p>Click on *Finish* button to create the project</p> | An new project TestProject is created in the workspace | |
| 2.2 | Create a statechart | ress *Ctrl-N* to open the New Wizard<p>Expand the *YAKINDU SCT* tree entry and select *Statechart Model*</p><p>Click on *Next*</p><p>Enter Staircase.sct as name and click on *Finish* button to create the statechart</p> | Confirm Perspective Switch dialog pops up | |
| 2.3 | Complete statechart creating | Click on *Yes* button to enable the yakindu modeling perspective | A file named Staircase.sct is created in project explorer<p>A new visual editor view “Palette” is available.</p><p>It contains different elements (Region, State...)</p><p>The statechart contains the Statechart Specification Element, a Region with an Entry connected with a unnamed state</p><p>The state should have an error marker with the error “A state must have a name”</p><p>The Problem view should contain two errors. | |
| 2.4 | Open Properties View | Do a right click on the state to open the context menu<p>Select Show Properties View</p> | The properties view is opened displaying the selected state properties | |
| 2.5 | Change state name | Enter LightOff as new “State name:” in properties view<p>Press tab to change focus</p> | The states name should change to LightOff<p>The error markers disappear</p><p>The editor is marked as dirty</p> | |
| 2.6 | Create the LightOn State | Click on the state icon in the tools palette<p>Click inside the region to insert a new state</p><p>Change the state name to LightOn</p> | A state named LightOn is<p>created in the region</p><p>following error is displayed on state:</p><p>Node is not reachable due to missing incoming transition</p> | |
| 2.7 | Create a variable and an event | Enter following code in the Statechart Specification Element:<p></p><p>internal:</p><p>var light : boolean</p><p></p><p>interface:</p><p>in event keypress</p> | No specification errors should appear | |
| 2.8 | Add actions to states | Enter following code in state specification of state LightOff:<p></p><p>entry / light = false</p><p></p><p>Enter following code in state specification of state LightOn:</p><p></p><p>entry / light = true</p> | No specification errors should appear | |
| 2.9 | Create Transitions | Click on the Transition icon in the palette view<p>Connect the LightOff state with the LightOn state</p><p>Enter event keypress as trigger</p><p>Create a second Transition from LightOn to LightOff state</p><p>Enter after 30s as trigger</p> | A new transition with trigger keypress is created<p>A new transition with trigger after 30s is created</p> | |
| 2.10 | Add additional elements | Add following elements to the main region:<p>- Compartment State</p><p>- Shallow History</p><p>- Deep History</p><p>- Final State</p><p>- Exit Node</p><p>- Choice</p><p>- Synchronization</p> | Check if every element is drawed correctly (size, color, appearance etc.)<p></p><p>Check if error markers are set correctly if incoming transitions or names are missing and  'Dublicate NamedElement “xyz” in Region Main_region'</p> | |
| 2.10.1 | Naming | Change the name of: initial entry node, Shallow History, Deep History and Exit. | The names should appear beside or below of the element | |
| 2.11 | Copy & Paste | Select the main region<p>Select *Edit->Copy* (CTRL+C)  to copy the region</p><p>Select the diagram canvas</p><p>Select *Edit->Paste* (CTRL+V) to paste a copy of the region to the canvas</p> | Region should be copied with all including elements | |
| 2.12 | Delete | Remove following elements from the diagram:<p>- Copied Region</p><p>- Elements added in T.2.10</p> | All elements should be removed | |
| 2.13 | Navigator View | Enable SC Modeling Perspective <p>Expand the Staircase.sct file in the Package Explorer</p> | Statechart Staircase should be displayed as child with icon | |
| 2.13.1 | Navigator View | Expand the Statechart Staircase entry in the tree view | The two interfaces and the region should be displayed as children with icons. | |
| 2.13.2 | Navigator View | Expand the interface entries in the tree view | The variables and events of the interfaces should be listed as children with icons. | |
| 2.13.3 | Navigator View | Expand the region entry in the tree view | The initial state and the states LightOff and LightOn should be displayed as children with icons. | |
| 2.13.4 | Navigator View | Expand the states entries in the tree view | The outgoing transitions of the states should be displayed with icon and trigger/guard | |

h1(#Test3). Yakindu SCT Testcase 03 - Simulation

|_. Nr |_. Testname |_. Test Instructions |_. Postconditions |_. Status|
| 3.1 | bella | 45 | f | |
| 3.2 | bella | 45 | f | |
| 3.3 | bella | 45 | f | |