/**
* Copyright (c) 2016 committers of YAKINDU and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     committers of YAKINDU - initial API and implementation
*/
/**
 *  Unit TestCase for STextKeywordsInStatesAndRegions
 */
using System;
namespace Yakindu.SCR.STextKeywordsInStatesAndRegions {
	using NUnit.Framework;
	using Yakindu.SCR;
	
	[TestFixture]
	public class STextKeywordsInStatesAndRegionsTest {
		private STextKeywordsInStatesAndRegionsStatemachine sct;
	
	[SetUp]
	public void setup() {
		sct = new STextKeywordsInStatesAndRegionsStatemachine();
		sct.init();
	}
	
		[Test]
		public void testactiveCheckWithSTextNamedStates(){
			sct.enter();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
			sct.raiseE1();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_valueof));
			sct.raiseE2();
			sct.runCycle();
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_oncycle));
			Assert.IsTrue(sct.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_valueof));
		}
	}
}
